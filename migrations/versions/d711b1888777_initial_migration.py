"""Initial migration

Revision ID: d711b1888777
Revises: 
Create Date: 2021-08-30 18:00:00.178684

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd711b1888777'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comorbidities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('oxygens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('register_date', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('symptoms',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('temperatures',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('register_date', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=200), nullable=False),
    sa.Column('last_name', sa.String(length=200), nullable=False),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('phone', sa.String(length=200), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('dni', sa.String(length=200), nullable=False),
    sa.Column('username', sa.String(length=200), nullable=True),
    sa.Column('type', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('speciality', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recovered', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('phone', sa.String(length=200), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('health_reports',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_contact_with_infected', sa.Boolean(), nullable=False),
    sa.Column('observation', sa.String(length=255), nullable=False),
    sa.Column('register_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('oxygen_id', sa.Integer(), nullable=True),
    sa.Column('temperature_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['oxygen_id'], ['oxygens.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['temperature_id'], ['temperatures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('monitoring',
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('doctor_id', 'patient_id')
    )
    op.create_table('patients_comorbidities',
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('comorbidity_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comorbidity_id'], ['comorbidities.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('patient_id', 'comorbidity_id')
    )
    op.create_table('health_reports_symptoms',
    sa.Column('health_report_id', sa.Integer(), nullable=False),
    sa.Column('symptom_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['health_report_id'], ['health_reports.id'], ),
    sa.ForeignKeyConstraint(['symptom_id'], ['symptoms.id'], ),
    sa.PrimaryKeyConstraint('health_report_id', 'symptom_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('health_reports_symptoms')
    op.drop_table('patients_comorbidities')
    op.drop_table('monitoring')
    op.drop_table('health_reports')
    op.drop_table('contacts')
    op.drop_table('patients')
    op.drop_table('doctors')
    op.drop_table('users')
    op.drop_table('temperatures')
    op.drop_table('symptoms')
    op.drop_table('oxygens')
    op.drop_table('comorbidities')
    # ### end Alembic commands ###
